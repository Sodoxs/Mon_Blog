security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: bcrypt

    role_hierarchy:
        ROLE_USER:
        ROLE_ADMIN: ROLE_USER

    providers:
        my_provider_in_memory:
            memory:
                users:
                    user:
                        password:   $2y$13$J2hysupeOkKWKeBZv.BcJ.3Gqq8mLTt8Vke5COz1L8.kgnLiZfVXy
                        roles:  ROLE_USER
                    admin:
                        password:   $2y$13$Rj2Q1Kxm22oA2t0SEk8D1ulfX5o5nVT62ABgB.5Hq12PHLG0S16AS
                        roles: ROLE_ADMIN

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                check_path: login_check
                login_path: login

            logout:
                path: logout
                target: /
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path:   ^/blog, roles: ROLE_USER }
